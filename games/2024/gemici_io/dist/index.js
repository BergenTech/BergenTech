(()=>{var ke=new Promise((t,e)=>{let i=0;for(var s of["p5/p5.min.js","p5/addons/p5.sound.min.js"])document.head.appendChild(Object.assign(document.createElement("script"),{src:s,async:!1,onload:()=>{i++,i===2&&t()}}))});var ne=class{audio=!1;weight={images:3/6,sounds:1/6,fonts:2/6};constructor(){this.btImage=loadImage("assets/images/BCTS.png"),this.gameImage=loadImage("assets/images/logo.png"),this.loadingFont=loadFont("assets/fonts/Roboto_Mono/static/RobotoMono-ExtraLight.ttf"),this.startSound=loadSound("assets/sounds/startup.mp3"),this.working=!0,this.frame=0,this.state=0,this.progress=0,this.loadTime=0,this.startSound.setLoop(!1)}render(){if(this.audio)this.frame++,this.startSound.isPlaying()||this.startSound.play(),this.state<=3?this.renderBCTS():this.state>3&&this.renderSplash();else return this.requestAudio()}requestAudio(){push(),background(0),textFont(this.loadingFont),textSize(20),textAlign(CENTER),fill(255),text("Click to enable audio",width/2,height/2),window.focused===!0&&(mouseIsPressed||keyIsPressed)&&(this.audio=!0,this.frame=-30),pop()}load(){if(this.loadTime===0){this.assets={images:[["butterfly",window.game.loadImage("assets/images/butterfly.png")],["logo",window.game.loadImage("assets/images/logo.png")],["bt_logo",window.game.loadImage("assets/images/BCTS.png")],["barricade",window.game.loadImage("assets/images/barricade.png")],["box",window.game.loadImage("assets/images/box.png")],["exit_image",window.game.loadImage("assets/images/exit.svg")],["pause_image",window.game.loadImage("assets/images/pause.svg")],["icon",window.game.loadImage("assets/images/icon.png")],["background",window.game.loadImage("assets/images/background.png")],["background_texture",window.game.loadImage("assets/images/texture.png")],["shotgun",window.game.loadImage("assets/images/sheets/shotgun.png")],["bullet",window.game.loadImage("assets/images/sheets/bullet.png")],["player_idle",window.game.loadImage("assets/images/sheets/player_idle.png")],["player_walk",window.game.loadImage("assets/images/sheets/player_walk.png")],["player_death",window.game.loadImage("assets/images/sheets/player_death.png")],["zombie_idle",window.game.loadImage("assets/images/sheets/zombie_idle.png")],["zombie_walk",window.game.loadImage("assets/images/sheets/zombie_walk.png")],["zombie_death",window.game.loadImage("assets/images/sheets/zombie_death.png")],["zombie_attack",window.game.loadImage("assets/images/sheets/zombie_attack.png")],["magnet",window.game.loadImage("assets/images/magnet.png")],["food",window.game.loadImage("assets/images/food.png")],["medbag",window.game.loadImage("assets/images/medbag.png")],["energy",window.game.loadImage("assets/images/energy.png")],["forcefield",window.game.loadImage("assets/images/forcefield.png")],["spinner",window.game.loadImage("assets/images/spinner.png")],["lightning",window.game.loadImage("assets/images/lightning.png")],["lightning_sprites",window.game.loadImage("assets/images/sheets/lightning.png")],["ball",window.game.loadImage("assets/images/ball.png")],["portal",window.game.loadImage("assets/images/portal.png")],["boss_idle",window.game.loadImage("assets/images/sheets/boss_idle.png")],["boss_run",window.game.loadImage("assets/images/sheets/boss_run.png")],["boss_death",window.game.loadImage("assets/images/sheets/boss_death.png")],["boss_attack",window.game.loadImage("assets/images/sheets/boss_attack.png")],["boss_hurt",window.game.loadImage("assets/images/sheets/boss_hurt.png")],["dog",window.game.loadImage("assets/images/sheets/dog_all.png")]],sounds:[["game_main","assets/sounds/game_main.mp3"],["game_intro","assets/sounds/game_intro.mp3"],["game_menu","assets/sounds/game_menu.mp3"]],fonts:[["roboto","assets/fonts/Roboto_Mono/static/RobotoMono-Regular.ttf"],["roboto_light","assets/fonts/Roboto_Mono/static/RobotoMono-Light.ttf"]]},this.loadedPts=0,this.totalPts=0;for(var e in this.assets)for(var i=0;i<this.assets[e].length;i++)this.totalPts+=this.weight[e]}this.loadTime++,this.progress>=99.99&&setTimeout(()=>this.working=!1,1e3);for(var e in this.assets)for(var i=0;i<this.assets[e].length;i++){if(typeof this.assets[e][i][1]=="string"&&e!=="images"){if(e==="fonts"){this.assets[e][i][1]={get loaded(){return!!this.font.font},font:window.loadFont(this.assets[e][i][1])};continue}else if(e==="sounds"){this.assets[e][i][1]={get loaded(){return this.sound.isLoaded()},sound:window.loadSound(this.assets[e][i][1])};continue}}if(this.assets[e][i][1].loaded){if(window.game.assets[e][this.assets[e][i][0]]!==void 0)continue;if(e==="images"){let a=window.loadImage(this.toBase64(this.assets[e][i][1]));window.game.assets[e][this.assets[e][i][0]]=a,this.loadedPts+=this.weight[e]}else e==="fonts"?(window.game.assets[e][this.assets[e][i][0]]=this.assets[e][i][1].font,this.loadedPts+=this.weight[e]):e==="sounds"&&(window.game.assets[e][this.assets[e][i][0]]=this.assets[e][i][1].sound,this.assets[e][i][1].sound.setLoop(!0),this.loadedPts+=this.weight[e])}}this.progress=this.loadedPts/this.totalPts*100}toBase64(e){var i=document.createElement("canvas");i.width=e.width,i.height=e.height;var s=i.getContext("2d",{willReadFrequently:!0});return s.drawImage(e,0,0),i.toDataURL()}changeState(){this.state++,this.frame=0}renderBCTS(){if(push(),background(10),this.state===0)return this.frame<=50?void 0:this.changeState();if(this.state===1)this.frame<50?tint(255,this.frame%50*2*5.1):this.changeState();else if(this.state===2)this.frame>100?this.changeState():tint(255,255);else if(this.state===3)if(this.frame<20)tint(255,255-this.frame%50*3*5.1);else return this.frame<50?void 0:this.changeState();var e=this.btImage.width/this.btImage.height;image(this.btImage,width/2,height/2,e*250,250),pop()}renderSplash(){push(),background("#000004"),this.state===4&&this.frame>80&&this.changeState(),image(this.gameImage,width/2,height/2-100,350,350),this.state>=5&&(this.load(),fill(0),strokeWeight(2),stroke(255),rect(width/2,height/2+100,300,36),fill("red"),rectMode(CORNER),noStroke(),rect(width/2-148,height/2+84,this.progress/100*296,32),this.progress>100&&(this.progress=100)),pop()}};function w(t,e){return abs(t.x-e.x)<(t.width+e.width)/2&&abs(t.y-e.y)<(t.height+e.height)/2}function k(t,e){return abs(e.x-t.x)<=t.width/2+e.radius&&abs(e.y-t.y)<=t.height/2+e.radius}function X(t,e){let i=t.width/2+e.width/2-abs(t.x-e.x),s=t.height/2+e.height/2-abs(t.y-e.y),r=.3;t.x<e.x?(t.x-=i/2*r,e.x+=i/2*r):(t.x+=i/2*r,e.x-=i/2*r),t.y<e.y?(t.y-=s/2*r,e.y+=s/2*r):(t.y+=s/2*r,e.y-=s/2*r)}function c(t){let e=mouseX,i=mouseY;return e>t.x-t.width/2&&e<t.x+t.width/2&&i>t.y-t.height/2&&i<t.y+t.height/2}var G=class{constructor(e,i){this.x=e||0,this.y=i||0,this.width=25,this.height=50,this.speed=1.7,this.health=100,this.maxHealth=100,this.healthQueue=0,this.kills=0,this.hitbox={width:this.width,height:this.height},this.dead=!1,this.deathState=0,this.sprites={idle:[[],[],[],[]],walking:[[],[],[],[]],dying:[[],[],[],[]]},this.state="idle",this.currentSprite=0,this.facing=0,this.weapon=new this.Weapon(this),this.loadSprites([window.game.assets.images.player_idle,window.game.assets.images.player_walk,window.game.assets.images.player_death])}loadSprites([e=[],i=[],s=[]]){var r=e.width/3,a=e.height/4;for(let u=0;u<2;u++)for(let g=0;g<4;g++){var h=e.get(u*r,g*a,r,a);this.sprites.idle[g].push(h)}var o=i.width/5,n=i.height/4;for(let u=0;u<4;u++)for(let g=0;g<4;g++){var h=i.get(u*o,g*n,o,n);this.sprites.walking[g].push(h)}var d=s.width/5,E=s.height/4;for(let u=0;u<4;u++)for(let g=0;g<4;g++){var h=s.get(u*d,g*E,d,E);this.sprites.dying[g].push(h)}return!0}get coords(){var e=this;return{get x(){return window.game.dimensions.position.x+width/2+e.width},get y(){return window.game.dimensions.position.y+height/2+e.height},set x(i){return window.game.dimensions.position.x=i-width/2-e.width},set y(i){return window.game.dimensions.position.y=i-height/2-e.height}}}checkBounds(){var e=this.coords;e.x<0&&(e.x=0),e.y<0&&(e.y=0),e.x>3e3&&(e.x=3e3),e.y>3e3&&(e.y=3e3)}drawDeath(){this.deathState++,this.deathState>20&&(this.deathState-20)%30===0&&this.currentSprite<3&&this.currentSprite++,graphic.push(),graphic.rectMode(CENTER);var e=this.height,i=this.sprites[this.state][this.facing][this.currentSprite].width/this.sprites[this.state][this.facing][this.currentSprite].height*e;graphic.image(this.sprites.dying[this.facing][this.currentSprite],this.x,this.y,i,e),graphic.pop();for(var s of window.game.getTargets()){var r=this.x,a=this.y;w(this,s)&&X(this,s),this.x=r,this.y=a}}healthToColor(e){e=Math.max(0,Math.min(100,e));let i=0,s=0;if(e>50){let r=(1-2*(e-50)/100)**2;i=Math.floor(255*r),s=128}else{let r=(2*e/100)**2;i=255,s=Math.floor(128*r)}return"#"+i.toString(16).padStart(2,"0")+s.toString(16).padStart(2,"0")+"00"}draw(){if(this.dead)return this.deathState>150&&(window.game.screen="over"),this.drawDeath();graphic.push(),graphic.rectMode(CENTER);var e=this.height,i=this.sprites[this.state][this.facing][this.currentSprite].width/this.sprites[this.state][this.facing][this.currentSprite].height*e;graphic.image(this.sprites[this.state][this.facing][this.currentSprite],this.x,this.y,i,e),graphic.fill("red"),graphic.rect(this.x,this.y+this.height/2+15,30,5),graphic.fill("green"),graphic.rectMode(CORNER),graphic.rect(this.x-this.width/2-3,this.y+this.height/2+12.5,this.health/this.maxHealth*31,5),graphic.pop()}update(){if(this.dead===!0)return!1;var[e,i]=this.getMovement();this.weapon.update();var s=window.game.dimensions.position.x,r=window.game.dimensions.position.y;window.game.dimensions.position.x+=e,window.game.dimensions.position.y-=i,this.checkBounds();var a=window.game.dimensions.position.x,h=window.game.dimensions.position.y,o=a-s,n=h-r;window.game.moveEntities(o,-n),frameCount%15===0&&this.currentSprite++,this.currentSprite>this.sprites[this.state][this.facing].length-1&&(this.currentSprite=0),window.frameCount%10===0&&(this.hurt(this.healthQueue),this.healthQueue=0),this.checkCollisions(window.game.getTargets())}getMovement(){return this.state="walking",keyIsDown(87)&&keyIsDown(65)?(this.facing=3,[-this.speed*cos(45),this.speed*sin(45)]):keyIsDown(87)&&keyIsDown(68)?(this.facing=2,[this.speed*cos(45),this.speed*sin(45)]):keyIsDown(83)&&keyIsDown(65)?(this.facing=3,[-this.speed*cos(45),-this.speed*sin(45)]):keyIsDown(83)&&keyIsDown(68)?(this.facing=2,[this.speed*cos(45),-this.speed*sin(45)]):keyIsDown(87)?(this.facing=0,[0,this.speed]):keyIsDown(65)?(this.facing=3,[-this.speed,0]):keyIsDown(68)?(this.facing=2,[this.speed,0]):keyIsDown(83)?(this.facing=0,[0,-this.speed]):(this.facing=0,this.state="idle",[0,0])}hurt(e){this.health-=e,this.health<=0&&(this.health=0,this.kill())}kill(){if(this.dead===!0)return!1;this.dead=!0,this.currentSprite=0,this.state="dying"}checkCollisions(e){for(let i=0;i<e.length;i++){let s=e[i];w(this,s)&&(this.healthQueue+=s.damage/30)}}};G.prototype.Weapon=class{sprites=[];currentSprite=0;constructor(e){this.loadSprites(window.game.assets.images.shotgun),this.player=e,this.width=40,this.height=20,this.damage=20,this.ammo=5,this.weaponCooldown=100,this.baseCooldown=100,this.weaponAngle=0,this.penetration=0}loadSprites(e){var i=e.width,s=e.height/18;for(let a=0;a<18;a++){var r=e.get(0,a*s,i,s);this.sprites.push(r)}}draw(){switch(graphic.push(),this.weaponCooldown){case 60:this.currentSprite=10;break;case 57:this.currentSprite=11;break;case 54:this.currentSprite=12;break;case 51:this.currentSprite=13;break;case 48:this.currentSprite=14;break;case 45:this.currentSprite=15;break;case 42:this.currentSprite=16;break;case 39:this.currentSprite=17;break;case 36:this.currentSprite=17;break;case 20:this.currentSprite=16;break;case 17:this.currentSprite=17;break;case 24:this.currentSprite=1;break;case 11:this.currentSprite=2;break;case 8:this.currentSprite=3;break;case 5:this.currentSprite=4;break;case 2:this.currentSprite=5;break;case 99:this.currentSprite=6;break;case 96:this.currentSprite=7;break;case 93:this.currentSprite=8;break;case 90:this.currentSprite=9;break;case 87:this.currentSprite=0;break}graphic.translate(this.player.x,this.player.y),graphic.rotate(-this.weaponAngle),graphic.translate(15,0),graphic.rotate(180),this.weaponAngle<90||this.weaponAngle>270?(graphic.scale(1,-1),graphic.image(this.sprites[this.currentSprite],0,5,this.width,this.height)):graphic.image(this.sprites[this.currentSprite],0,5,this.width,this.height),graphic.pop(),graphic.push(),graphic.fill("black"),graphic.rect(this.player.x,this.player.y+this.player.height/2+25,30,5),graphic.fill("gold"),graphic.rectMode(CORNER),graphic.rect(this.player.x-this.player.width/2-3,this.player.y+this.player.height/2+22.5,30-this.weaponCooldown/this.baseCooldown*30,5),graphic.pop()}update(){var e=dist(this.player.x,0,mouseX,0),i=dist(0,this.player.y,0,mouseY),s=atan(i/e);mouseX>=this.player.x&&mouseY>=this.player.y?s=360-s:mouseX<=this.player.x&&mouseY<=this.player.y?s=180-s:mouseX<=this.player.x&&mouseY>=this.player.y&&(s=180+s),this.weaponAngle=s,this.weaponCooldown--,this.weaponCooldown<1&&(this.weaponCooldown=this.baseCooldown,this.shoot())}getCoords(e){var i=this;return{get x(){return window.game.dimensions.position.x+(e.x-i.player.x)+width/2+i.player.width},get y(){return window.game.dimensions.position.y+(e.y-i.player.y)+height/2+i.player.height}}}shoot(){for(var e=0;e<this.ammo;e++){var i=new pe(this,this.player,this.weaponAngle-this.ammo/2*5+5+e*5);window.game.bullets.push(i)}}getBarrelPosition(){var e=(15+this.height)*cos(this.weaponAngle),i=(15+this.height)*sin(this.weaponAngle);return{x:this.player.x+e,y:this.player.y-i}}checkBullets(e=[],i=[]){if(!e.length)return!1;for(var s=0;s<e.length;s++){var r=e[s],a=this.getCoords(r);(a.x<0||a.y<0||a.x>3e3||a.y>3e3)&&e.splice(s,1);for(var h=0;h<i.length;h++){var o=i[h];if(w(r,o)){r.collide(),o.hurt(this.damage);break}}}return!0}drawBullets(e=[]){for(var i=0;i<e.length;i++){var s=e[i];s.draw()}}updateBullets(e=[]){for(var i=0;i<e.length;i++){var s=e[i];s.update()}}};var pe=class{constructor(e,i,s){this.weapon=e,this.player=i,this.angle=s,this.x=this.weapon.getBarrelPosition().x,this.y=this.weapon.getBarrelPosition().y,this.width=5,this.height=5,this.speed=4,this.penetration=e.penetration,this.time=0,this.timeLimit=60,this.collisions=0}draw(){graphic.push(),graphic.fill("gold"),graphic.rect(this.x,this.y,this.width,this.height),graphic.pop()}update(){this.time++,this.x+=this.speed*cos(this.angle),this.y-=this.speed*sin(this.angle),this.time>this.timeLimit&&this.kill()}collide(){this.collisions++,this.collisions>this.penetration&&this.kill()}kill(){window.game.bullets.splice(window.game.bullets.indexOf(this),1)}};G.prototype.Weapon.prototype.Bullet=pe;var le=G;var B=class{constructor(){this.bossBattle=!1}currentDimensions=null;draw({dimensions:{position:e,center:i}}){this.currentDimensions={position:e,center:i},graphic.push(),graphic.background(200),graphic.fill(0),graphic.rect(3e3-e.x-i.x-width/2-20,3e3-e.y-i.y-height/2-40,3060,3080),graphic.fill(200),graphic.rect(3e3-e.x-i.x-width/2-20,3e3-e.y-i.y-height/2-40,3020,3040);for(let s=-900;s<3900;s+=300)for(let r=-900;r<3900;r+=300)graphic.image(window.game.assets.images.background_texture,1500-e.x-i.x-width/2-20+s,1500-e.y-i.y-height/2-40+r,300,300);graphic.image(window.game.assets.images.background,3e3-e.x-i.x-width/2-20,3e3-e.y-i.y-height/2-40,3040,3040),graphic.pop()}drawPost({dimensions:{position:e,center:i}}){this.drawBorders({dimensions:this.currentDimensions})}drawBorders({dimensions:{position:e,center:i}}){graphic.push(),graphic.fill(0);var s=996/230,r=22,a=r*s;for(let h=0;h<3e3;h+=a)graphic.image(window.game.assets.images.barricade,1500-e.x-i.x-width/2+h,1500-e.y-i.y-height/2-40-30,a,r);graphic.image(window.game.assets.images.barricade,1500-e.x-i.x-width/2+3e3-a/2+10+1,1500-e.y-i.y-height/2-40-30,a,r),graphic.image(window.game.assets.images.barricade,1500-e.x-i.x-width/2-3,1500-e.y-i.y-height/2-40-30,a,r);for(let h=0;h<3e3;h+=a)graphic.push(),graphic.translate(1500-e.x-i.x-width/2+h,1500-e.y-i.y-height/2-40+3e3+30),graphic.rotate(180),graphic.image(window.game.assets.images.barricade,0,0,a,r),graphic.pop();graphic.push(),graphic.translate(1500-e.x-i.x-width/2+3e3-a/2+10+1,1500-e.y-i.y-height/2-40+3e3+30),graphic.rotate(180),graphic.image(window.game.assets.images.barricade,0,0,a,r),graphic.pop(),graphic.push(),graphic.translate(1500-e.x-i.x-width/2-3,1500-e.y-i.y-height/2-40+3e3+30),graphic.rotate(180),graphic.image(window.game.assets.images.barricade,0,0,a,r),graphic.pop();for(let h=0;h<3e3-a;h+=a)graphic.push(),graphic.translate(1500-e.x-i.x-width/2-40,1500-e.y-i.y-height/2+h),graphic.rotate(-90),graphic.image(window.game.assets.images.barricade,0,0,a,r),graphic.pop();graphic.push(),graphic.translate(1500-e.x-i.x-width/2-40,1500-e.y-i.y-height/2-15+1),graphic.rotate(-90),graphic.image(window.game.assets.images.barricade,0,0,a,r),graphic.pop(),graphic.push(),graphic.translate(1500-e.x-i.x-width/2-40,1500-e.y-i.y-height/2+3e3-a/2-20),graphic.rotate(-90),graphic.image(window.game.assets.images.barricade,0,0,a,r),graphic.pop();for(let h=0;h<3e3-a;h+=a)graphic.push(),graphic.translate(1500-e.x-i.x-width/2+3e3,1500-e.y-i.y-height/2+h),graphic.rotate(90),graphic.image(window.game.assets.images.barricade,0,0,a,r),graphic.pop();graphic.push(),graphic.translate(1500-e.x-i.x-width/2+3e3,1500-e.y-i.y-height/2-15+1),graphic.rotate(90),graphic.image(window.game.assets.images.barricade,0,0,a,r),graphic.pop(),graphic.push(),graphic.translate(1500-e.x-i.x-width/2+3e3,1500-e.y-i.y-height/2+3e3-a/2-20),graphic.rotate(90),graphic.image(window.game.assets.images.barricade,0,0,a,r),graphic.pop(),graphic.pop()}};var f=class{constructor(e=0,i=0,s=0,r=0,a=0,h=0,o="white",n=null){this.x=e,this.y=i,this.width=s,this.height=r,this.health=a,this.damage=h,this.color=o,this.image=n}getCoords(){return{x:this.x-window.game.player.coords.x+width/2,y:this.y-window.game.player.coords.y+height/2}}draw(){let e=this.getCoords();graphic.push(),graphic.noStroke(),this.update?.call(this),graphic.fill(this.color),this.image?graphic.image(this.image,e.x,e.y,this.width,this.height):(graphic.fill(this.color),graphic.rect(e.x,e.y,this.width,this.height)),graphic.pop()}hurt(e){this.health-=e,window.game.damage.add(e,this.getCoords().x,this.getCoords().y),this.health<=0&&this.kill()}kill(){window.game.objects.objects.splice(window.game.objects.objects.indexOf(this),1)}};var j=class{constructor(e=0,i=0,s=10,r=10,a=20,h=2,o=1,n=.5,d="black",E=null){this.x=e,this.y=i,this.health=a,this.maxHealth=a,this.damage=h,this.width=s,this.height=r,this.speed=o,this.color=d,this.img=E,this.dropChance=n,this.offsetY=0}get coords(){var e=this;return{get x(){return window.game.dimensions.position.x+(e.x-window.game.player.x)+width/2+window.game.player.width},get y(){return window.game.dimensions.position.y+(e.y-window.game.player.y)+height/2+window.game.player.height},set x(i){return e.x=window.game.player.x-window.game.player.coords.x+i},set y(i){return e.y=window.game.player.y-window.game.player.coords.y+i}}}get onScreen(){return!(this.x<0-this.width||this.y<0-this.height||this.x>width+this.width||this.y>height+this.height)}draw(){if(this.onScreen){if(graphic.push(),this.img){var e=this.width*1.3,i=this.img.height*(this.width/this.img.width)*1.3;graphic.fill(this.color),graphic.image(this.img,this.x,this.y-(this.offsetY||0),e,i)}else graphic.fill(this.color),graphic.rect(this.x,this.y,this.width,this.height);graphic.pop()}}update(){this.checkBounds();var e=atan2(window.game.player.y-this.y,window.game.player.x-this.x),i=this.speed*cos(e),s=this.speed*sin(e);this.x+=i,this.y+=s}checkCollisions(e){if(this.onScreen){for(let r=0;r<e.length;r++)if(this!==e[r]){let a=e[r];if(w(this,a))if(a instanceof f){var i=a._x,s=a._y;X(this,a),a.x=i,a.y=s}else X(this,a)}}}checkBounds(){var e=this.coords;e.x<0&&(e.x=0),e.y<-5&&(e.y=-5),e.x>3e3&&(e.x=3e3),e.y>3005&&(e.y=3005)}hurt(e){this.health-=e,window.game.damage.add(e,this.x,this.y),this.health<=0&&this.kill()}kill(){window.game.enemies_arr.splice(window.game.enemies_arr.indexOf(this),1),Math.random()<this.dropChance&&window.game.currency.dropCurrency(this)}};var L=class t extends j{constructor(e=0,i=0){super(e,i,15,15,10,2,1.2,.45,"purple",window.game.assets.images.butterfly),t.prototype.health&&(this.health=t.prototype.health),this._update=this.update,this.update=()=>{this._update(),this.offsetY=sin(frameCount%120*(3/2))*5}}};var I=class t extends j{constructor(e=0,i=0){super(e,i,20,30,20,3.5,.7,.55,"green",null),t.prototype.health&&(this.health=t.prototype.health),this.state="idle",this.facing=0,this.currentSprite=0,this.offsetY=2,this.update=()=>{frameCount%15===0&&this.currentSprite++,this.currentSprite>=this.sprites[this.state][0].length&&(this.currentSprite=0),this.img=this.sprites[this.state][this.facing][this.currentSprite],this.checkBounds();var s=atan2(window.game.player.y-this.y,window.game.player.x-this.x),r=this.speed*cos(s),a=this.speed*sin(s);abs(r)>.1||abs(a)>.1?(this.state="walking",abs(this.speedY)>abs(this.speedX)&&(this.facing=0),abs(this.speedY)<abs(this.speedX)&&(this.speedX>0?this.facing=2:this.facing=3)):this.state="idle",this.x+=r,this.y+=a},this.draw=()=>{if(this.onScreen){if(graphic.push(),this.img){var s=51,r=this.img.height*(this.width/(this.img.width*.75))*1.7;graphic.fill(this.color),graphic.image(this.img,this.x,this.y-(this.offsetY||0),s,r)}else graphic.fill(this.color),graphic.rect(this.x,this.y,this.width,this.height);graphic.pop()}}}};I.prototype.sprites={idle:[[],[],[],[]],walking:[[],[],[],[]],dying:[[],[],[],[]],attacking:[[],[],[],[]]};var Y=class t extends j{get sprites(){return window.game.enemies.types.Zombie.prototype.sprites}constructor(e=0,i=0){super(e,i,34,51,1e3,5,.8,1,"green",null),t.prototype.health&&(this.health=t.prototype.health),this.state="idle",this.facing=0,this.currentSprite=0,this.offsetY=2,this.update=()=>{frameCount%15===0&&this.currentSprite++,this.currentSprite>=this.sprites[this.state][0].length&&(this.currentSprite=0),this.img=this.sprites[this.state][this.facing][this.currentSprite],this.checkBounds();var s=atan2(window.game.player.y-this.y,window.game.player.x-this.x),r=this.speed*cos(s),a=this.speed*sin(s);abs(r)>.1||abs(a)>.1?(this.state="walking",abs(this.speedY)>abs(this.speedX)&&(this.facing=0),abs(this.speedY)<abs(this.speedX)&&(this.speedX>0?this.facing=2:this.facing=3)):this.state="idle",this.x+=r,this.y+=a},this.draw=()=>{if(this.onScreen){if(graphic.push(),this.img){var s=71.39999999999999,r=this.img.height*(this.width/(this.img.width*.75))*1.7;graphic.fill(this.color),graphic.image(this.img,this.x,this.y-(this.offsetY||0),s,r)}else graphic.fill(this.color),graphic.rect(this.x,this.y,this.width,this.height);graphic.pop()}},this.kill=()=>{window.game.enemies_arr.splice(window.game.enemies_arr.indexOf(this),1);var s=window.game.objects.spawnObject("diamond",[this.coords.x,this.coords.y]);s.value=100*window.game.level}}};var C=class extends j{spriteState="idle";currentSprite=0;_state="idle";runningAngle=0;runningTime=0;idleRandom=0;idleTime=0;chaseTime=0;chaseRandom=0;firing=!1;facing="left";time=0;bullets=[];constructor(e=0,i=0){super(e,i,60*1.5,50*1.5,3e4,10,0,0,"black",null),window.game.boss_bullets=this.bullets}get center(){return{x:1500-game.dimensions.position.x,y:1500-game.dimensions.position.y}}draw(){graphic.push(),graphic.rectMode(CENTER),graphic.imageMode(CENTER),graphic.fill(this.color);var e=this.width*1.3,i=this.sprites[this.spriteState][this.currentSprite].height*(e/this.sprites[this.spriteState][this.currentSprite].width);this.facing==="left"?graphic.image(this.sprites[this.spriteState][this.currentSprite],this.x,this.y,e,i):(graphic.push(),graphic.scale(-1,1),graphic.image(this.sprites[this.spriteState][this.currentSprite],-this.x,this.y,e,i),graphic.pop()),graphic.stroke("red"),graphic.strokeWeight(2),graphic.fill(0,0,0,0),graphic.rect(this.x,this.y,this.width,this.height),this.drawBorders(),graphic.pop()}drawBorders(){var e=this.center,i=650/2;graphic.push(),graphic.noFill(),graphic.stroke("red"),graphic.strokeWeight(4),graphic.ellipse(e.x,e.y,i*2,i*2),graphic.pop()}get state(){return this._state}set state(e="idle"){this._state=e,this.currentSprite=0,this.firing=!1,e==="idle"?(this.idleTime=0,this.idleRandom=random(0,1),this.spriteState="idle"):e==="chasing"?(this.chaseRandom=random(0,1),this.chaseTime=0,this.spriteState="running"):e==="running"?(this.runningAngle=atan2(window.game.player.y-this.y,window.game.player.x-this.x),this.runningTime=0,this.spriteState="running"):e==="dying"?this.spriteState="dying":e==="attacking"?this.spriteState="attacking":e==="hurt"&&(this.spriteState="hurt")}idle(){this.idleTime++,this.idleRandom<.55&&(this.state="chasing",this.idleRandom<.2&&(this.firing=!0)),this.idleTime>100&&this.idleRandom>.55&&(this.state="running")}chase(){this.chaseTime++;var e=atan2(window.game.player.y-this.y,window.game.player.x-this.x),i=1.2*cos(e),s=1.2*sin(e);e>-90&&e<90?this.facing="right":this.facing="left",this.x+=i,this.y+=s,this.firing&&frameCount%60===0&&this.fire(),this.chaseTime>this.chaseRandom*500&&(this.state="idle")}run(){this.runningTime++;var e=this.runningAngle,i=4.8*cos(e),s=4.8*sin(e);e>-90&&e<90?this.facing="right":this.facing="left",this.x+=i,this.y+=s,this.runningTime>100&&(this.state="idle")}fire(){for(var e=0;e<8;e++){var i=e*45;this.bullets.push(new we(this.x,this.y,i,this))}}update(){this.time++,this.state==="chasing"?frameCount%20===0&&this.currentSprite++:this.state==="running"?frameCount%10===0&&this.currentSprite++:frameCount%15===0&&this.currentSprite++,this.currentSprite>=this.sprites[this.spriteState].length&&(this.currentSprite=0);var e=this.center,i=650/2,s=this.x,r=this.y;this.state==="idle"?this.idle():this.state==="chasing"?this.chase():this.state==="running"&&this.run(),this.checkBounds()&&(this.x=s,this.y=r);for(var a=0;a<this.bullets.length;a++)this.bullets[a].draw(),this.bullets[a].update();dist(window.game.player.x,window.game.player.y,e.x,e.y)>i-10&&frameCount%10===0&&window.game.player.hurt(4)}kill(){window.game.enemies_arr.splice(window.game.enemies_arr.indexOf(this),1),window.game.objects.spawnObject("chest",[this.coords.x,this.coords.y])}checkBounds(){var e=this.center,i=650/2;return dist(e.x,e.y,this.x,this.y)>i-30}};C.prototype.sprites={idle:[],running:[],dying:[],attacking:[],hurt:[]};function Fe(t,e,i){var s=atan2(sin(e-t),cos(e-t));return t+s*i}var we=class{cooldown=0;constructor(e,i,s,r){this.x=e,this.y=i,this.angle=s,this.parent=r,this.speed=3.5,this.radius=4,this.color="black"}draw(){graphic.push(),graphic.fill(this.color),graphic.ellipse(this.x,this.y,this.radius*2),graphic.pop()}update(){this.cooldown--;var e=this.speed*cos(this.angle),i=this.speed*sin(this.angle),s=atan2(window.game.player.y-this.y,window.game.player.x-this.x),r=Fe(this.angle,s,.01);this.angle=r,this.x+=e,this.y+=i,this.checkBounds()&&this.kill(),k(window.game.player,this)&&this.cooldown<0&&(window.game.player.hurt(8),this.cooldown=60)}checkBounds(){var e=this.parent.center,i=650/2;return dist(e.x,e.y,this.x,this.y)>i-5}kill(){this.parent.bullets.splice(this.parent.bullets.indexOf(this),1)}};var T=class t extends j{constructor(e=0,i=0){super(e,i,20,15,18,2,1.3,.5,"black",null),t.prototype.health&&(this.health=t.prototype.health),this.state="idle",this.currentSprite=0,this.offsetY=2,this.update=()=>{frameCount%15===0&&this.currentSprite++,this.currentSprite>=this.sprites[this.state][0].length&&(this.currentSprite=0),this.img=this.sprites[this.state][this.currentSprite],this.checkBounds();var s=atan2(window.game.player.y-this.y,window.game.player.x-this.x),r=this.speed*cos(s),a=this.speed*sin(s);abs(r)>.1||abs(a)>.1?this.state="walking":this.state="idle",this.x+=r,this.y+=a},this.draw=()=>{if(this.onScreen){if(graphic.push(),this.img){var s=34,r=this.img.height*(this.width/(this.img.width*.75))*1.7;graphic.fill(this.color),graphic.image(this.img,this.x,this.y-(this.offsetY||0),s,r)}else graphic.fill(this.color),graphic.rect(this.x,this.y,this.width,this.height);graphic.pop()}}}};T.prototype.sprites={idle:[],walking:[],dying:[],attacking:[]};var M=class{types={Zombie:I,Butterfly:L,FinalBoss:C,ZombieBoss:Y,Dog:T};constructor(e){this.enemies=e.enemies_arr,this.game=e,this.loadZombieSprites([e.assets.images.zombie_idle,e.assets.images.zombie_walk,e.assets.images.zombie_death,e.assets.images.zombie_attack]),this.loadBossSprites([e.assets.images.boss_idle,e.assets.images.boss_attack,e.assets.images.boss_death,e.assets.images.boss_hurt,e.assets.images.boss_run])}spawnEnemy(e="zombie",i=0,s=0){switch(e){default:case"zombie":this.enemies.push(new I(...this.randomSpawnPoint()));break;case"butterfly":this.enemies.push(new L(...this.randomSpawnPoint()));break;case"zombie_boss":this.enemies.push(new Y(...this.randomSpawnPoint()));break;case"dog":this.enemies.push(new T(...this.randomSpawnPoint()));break;case"final_boss":this.enemies.push(new C(i,s));break}}randomSpawnPoint(){var e=Math.floor(random(0,3));let i=0,s=random(-20,height+20);switch(e){case 0:i=-10;break;case 1:i=random(0,width),Math.floor(random(0,2))?s=random(-50,-20):s=random(height+50,height+20);break;case 2:i=width+10;break;default:break}return i-window.game.player.x+window.game.player.coords.x>3e3||i-window.game.player.x+window.game.player.coords.x<0||s-window.game.player.y+window.game.player.coords.y>3e3||s-window.game.player.y+window.game.player.coords.y<0?this.randomSpawnPoint():[i,s]}draw(e){for(var i=0;i<e.length;i++)e[i].draw()}update(e){for(var i=this.game.getTargets().slice(0),s=0;s<e.length;s++)e[s].update(),e[s].checkCollisions(i)}loadZombieSprites([e=[],i=[],s=[],r=[]]){var a=e.width/6,h=e.height/4;for(let y=0;y<5;y++)for(let l=0;l<4;l++){var o=e.get(y*a,l*h,a,h);this.types.Zombie.prototype.sprites.idle[l].push(o)}var n=i.width/11,d=i.height/4;for(let y=0;y<10;y++)for(let l=0;l<4;l++){var o=i.get(y*n,l*d,n,d);this.types.Zombie.prototype.sprites.walking[l].push(o)}var E=s.width/8,u=s.height/4;for(let y=0;y<7;y++)for(let l=0;l<4;l++){var o=s.get(y*E,l*u,E,u);this.types.Zombie.prototype.sprites.dying[l].push(o)}var g=r.width/9,Z=r.height/4;for(let y=0;y<8;y++)for(let l=0;l<4;l++){var o=r.get(y*g,l*Z,g,Z);this.types.Zombie.prototype.sprites.attacking[l].push(o)}return!0}loadBossSprites([e=[],i=[],s=[],r=[],a=[]]){var h=e.width/3,o=e.height;for(let m=0;m<3;m++){var n=e.get(m*h,0,h,o);this.types.FinalBoss.prototype.sprites.idle.push(n)}var d=i.width/6,E=i.height;for(let m=0;m<6;m++){var n=i.get(m*d,0,d,E);this.types.FinalBoss.prototype.sprites.attacking.push(n)}var u=s.width/7,g=s.height;for(let m=0;m<7;m++){var n=s.get(m*u,0,u,g);this.types.FinalBoss.prototype.sprites.dying.push(n)}var Z=r.width/3,y=r.height;for(let m=0;m<3;m++){var n=r.get(m*Z,0,Z,y);this.types.FinalBoss.prototype.sprites.hurt.push(n)}var l=a.width/3,Ye=a.height;for(let m=0;m<3;m++){var n=a.get(m*l,0,l,Ye);this.types.FinalBoss.prototype.sprites.running.push(n)}}};function Ze(t){for(var e=random(0,1),i=t.toSorted((h,o)=>h[1]-o[1]),s=0,r=0;r<i.length;r++){var a=i[r];if(e>=s&&e<=s+a[1])return a[0];s=a[1]}}var U=class extends f{drops=[["magnet",.2],["food",.1],["emerald",.7]];dead=!1;constructor(e=0,i=0){super(e,i,40,40,1,0,"brown",window.game.assets.images.box)}kill(){if(this.dead)return!1;this.dead=!0;let e=Ze(this.drops);if(e){var i=window.game.objects.spawnObject(e,[this._x,this._y]);e==="emerald"&&(i.value=random(10,20)*window.game.level)}this.draw=()=>{}}hurt(e){this.health-=e,window.game.damage.add(e,this.getCoords().x,this.getCoords().y),this.health<=0&&this.kill()}};var z=class extends f{constructor(e=0,i=0){super(e,i,7,7,0,0,"#44ba38",null)}draw(){let e=this.getCoords();graphic.push(),this.update?.call(this),graphic.fill(this.color),graphic.translate(e.x,e.y),this.image?graphic.image(this.image,0,0,this.width,this.height):(graphic.rotate(45),graphic.rect(0,0,this.width,this.height)),graphic.pop()}update(){var e=this.getCoords(),i=dist(e.x,e.y,window.game.player.x,window.game.player.y);if(i<3&&(i=3),i<50){var s=atan2(window.game.player.y-e.y,window.game.player.x-e.x),r=50*cos(s)/i,a=50*sin(s)/i;this.x+=r,this.y+=a}w({x:e.x,y:e.y,width:this.width,height:this.height},window.game.player)&&(this.kill(),window.game.currency.collected(this))}};var q=class extends f{constructor(e=0,i=0){super(e,i,30,30,0,0,"blue",window.game.assets.images.magnet)}update(){if(this.collecting)return this.updateCollection();var e=this.getCoords(),i=dist(e.x,e.y,window.game.player.x,window.game.player.y);if(i<3&&(i=3),i<40){var s=atan2(window.game.player.y-e.y,window.game.player.x-e.x),r=50*cos(s)/i,a=50*sin(s)/i;this.x+=r,this.y+=a}w({x:e.x,y:e.y,width:this.width,height:this.height},window.game.player)&&(this.collecting=!0,this.draw=this.update)}get emeralds(){return window.game.objects.objects.filter(e=>e instanceof z)}updateCollection(){if(window.game.upgradeScreen)return!1;var e=this.emeralds;if(e.length===0){this.kill();return}var i=window.game.player.coords;for(let h=0;h<e.length;h++){let o=e[h];var s=atan2(i.y-o.y,i.x-o.x),r=8*cos(s),a=8*sin(s);o.x+=r,o.y+=a}}};var $=class extends f{constructor(e=0,i=0){super(e,i,30,30,0,0,"brown",window.game.assets.images.food),this.heal=40}update(){var e=this.getCoords(),i=dist(e.x,e.y,window.game.player.x,window.game.player.y);if(i<3&&(i=3),i<40){var s=atan2(window.game.player.y-e.y,window.game.player.x-e.x),r=50*cos(s)/i,a=50*sin(s)/i;this.x+=r,this.y+=a}w({x:e.x,y:e.y,width:this.width,height:this.height},window.game.player)&&(window.game.player.health+=this.heal,window.game.player.health>window.game.player.maxHealth&&(window.game.player.health=window.game.player.maxHealth),this.kill())}};var Q=class extends f{constructor(e=0,i=0){super(e,i,7,7,0,0,"#0070a2",null)}draw(){let e=this.getCoords();graphic.push(),this.update?.call(this),graphic.fill(this.color),graphic.translate(e.x,e.y),this.image?graphic.image(this.image,0,0,this.width,this.height):(graphic.rotate(45),graphic.rect(0,0,this.width,this.height)),graphic.pop()}update(){var e=this.getCoords(),i=dist(e.x,e.y,window.game.player.x,window.game.player.y);if(i<3&&(i=3),i<50){var s=atan2(window.game.player.y-e.y,window.game.player.x-e.x),r=50*cos(s)/i,a=50*sin(s)/i;this.x+=r,this.y+=a}w({x:e.x,y:e.y,width:this.width,height:this.height},window.game.player)&&(this.kill(),window.game.currency.collected(this))}};var V=class extends f{constructor(e=0,i=0){super(e,i,60,60,0,0,"red",window.game.assets.images.portal)}draw(){let e=this.getCoords();if(graphic.push(),graphic.noStroke(),this.update?.call(this),graphic.fill(this.color),this.image?graphic.image(this.image,e.x,e.y,this.width,this.height):(graphic.fill(this.color),graphic.rect(e.x,e.y,this.width,this.height)),e.x<0||e.x>width||e.y<0||e.y>height){var i=atan2(e.y-height/2,e.x-width/2);graphic.push(),graphic.translate(width/2,height/2),graphic.rotate(i),graphic.translate(40,0),graphic.fill("red"),graphic.triangle(0,-10,0,10,20,0),graphic.pop()}graphic.pop()}update(){var e=this.getCoords();if(this.spawned===!0)return!1;w({x:e.x,y:e.y,width:this.width,height:this.height},window.game.player)&&(this.spawned=!0,setTimeout(()=>{var{x:i,y:s}=window.game.getLocation(this.x,this.y);window.game.enemies.spawnEnemy("final_boss",i,s)},1500),this.kill())}kill(){this.draw=()=>{var{x:e,y:i}=this.getCoords();graphic.fill("red"),graphic.circle(e,i,this.width,this.height)},setTimeout(()=>{super.kill()},1500)}};var J=class extends f{constructor(e=0,i=0){super(e,i,35,25,0,0,"yellow"),this.heal=40}update(){var e=this.getCoords(),i=dist(e.x,e.y,window.game.player.x,window.game.player.y);if(i<3&&(i=3),i<40){var s=atan2(window.game.player.y-e.y,window.game.player.x-e.x),r=50*cos(s)/i,a=50*sin(s)/i;this.x+=r,this.y+=a}w({x:e.x,y:e.y,width:this.width,height:this.height},window.game.player)&&(window.game.player.health+=this.heal,window.game.screen="win",window.game.player.health>window.game.player.maxHealth&&(window.game.player.health=window.game.player.maxHealth),this.kill())}};var N=class{constructor(e){this.game=e,this.objects=[];for(let i=0;i<15;i++)this.spawnObject("box",this.randomSpawnPoint())}spawnObject(e,[i,s]){let r=null;switch(e){case"box":r=new U(i,s);break;case"emerald":r=new z(i,s);break;case"magnet":r=new q(i,s);break;case"food":r=new $(i,s);break;case"diamond":r=new Q(i,s);break;case"spawner":r=new V(i,s);break;case"chest":r=new J(i,s);break}return this.objects.push(r),r}randomSpawnPoint(){return[random(0,3e3),random(0,3e3)]}render(e=[]){for(let i=0;i<e.length;i++)e[i].draw()}};var H=class{getLevelRequired(e){return 20*(e<30?e**1.45:e<40?e**1.7:e**2)}constructor(e){this.total=0,this.current=0,this.required=this.getLevelRequired(1),this.game=e,this.startEmeralds()}startEmeralds(){let e=this.game.player,i=360/15,s=()=>random(-10,10),r=100;for(let h=0;h<15;h++){let o=i*h,n=s(),d=e.coords.x+r*cos(o+n),E=e.coords.y+r*sin(o+n);var a=this.game.objects.spawnObject("emerald",[d,E]);a.value=3}}dropCurrency(e){let i=this.game.objects.spawnObject("emerald",[e.coords.x,e.coords.y]);i.value=Math.floor(random(1,5)*this.game.level)}collected(e){let i=e.value;this.current+=i,this.total+=i,this.game.score+=i/5}checkUpgrades(){if(this.current>this.required){var e=this.current;this.current=this.required,this.game.level++,this.game.requestUpgrade(this.game.level).then(()=>{this.current=e-this.required,this.required=this.getLevelRequired(this.game.level)}).catch(i=>{console.error(i),this.current=e})}}};var K=class{level=0;max=!1;data=[[3,5,0,25,"+3 Bullets, Faster Reload and Increased Damage"],[0,10,10,20,"Faster Reload, Bullet Speed and Increased Damage"],[2,5,0,0,"+2 Bullets and Faster Reload"],[0,10,10,10,"Faster Reload, Bullet Speed and Increased Damage"],[2,3,0,30,"+2 Bullets, Faster Reload and Increased Damage"]];constructor(e){this.name="Shotgun",this.maxLevel=5,this.description=this.data[0][4],this.image=window.game.player.weapon.sprites[0],this.game=e}upgrade(){if(this.max===!0)return!1;this.level++;var e=this.level-1,i=this.data[e];this.game.player.weapon.ammo+=i[0],this.game.player.weapon.baseCooldown-=i[1],this.game.player.weapon.weaponCooldown-=i[1],this.game.player.weapon.damage*=(100+i[3])/100,this.game.player.weapon.Bullet.prototype.speed*=(100+i[2])/100,this.level+1<=this.maxLevel?this.description=this.data[this.level][4]:this.max=!0}render(){}update(){}};var ee=class{level=0;max=!1;data=[[2,0,0,0,"Rotates around player"],[1,10,25,0,"+1 Spinner, Faster Spin and Increased Damage"],[0,0,50,25,"Increased Damage and Reduced Cooldown"],[0,15,0,0,"Faster Spin"],[2,0,50,25,"+1 Spinner, Increased Damage and Reduced Cooldown"]];spinners=[];numSpinners=0;spinnerSpeed=2.5;damage=15;cooldown=3500;constructor(e){this.name="Spinner",this.maxLevel=5,this.description=this.data[0][4],this.image=e.assets.images.spinner,this.game=e}upgrade(){if(this.max===!0)return!1;this.level++;var e=this.level-1,i=this.data[e];for(let s=0;s<i[0];s++)this.spinners.push(new ue(this));this.numSpinners+=i[0],this.spinnerSpeed*=(100+i[1])/100,this.damage*=(100+i[2])/100,this.cooldown*=(100-i[3])/100,this.spaceSpinners(),this.level<=this.maxLevel-1?this.description=this.data[this.level][4]:this.max=!0}render(){this.spinners.forEach(e=>e.draw())}update(){this.spinners.forEach(e=>e.update())}spaceSpinners(){var e=360/this.numSpinners;this.spinners.forEach((i,s)=>{i.angle=e*(s+1)})}},ue=class{constructor(e){this.parent=e,this.angle=0,this.radius=6,this.rotation=0}draw(){graphic.push(),graphic.translate(this.parent.game.player.x,this.parent.game.player.y),graphic.rotate(this.angle),graphic.translate(0,-65),graphic.rectMode(CENTER),graphic.fill("red"),graphic.rotate(this.rotation),graphic.image(this.parent.image,0,0,25,25),graphic.pop()}get x(){return this.parent.game.player.x-65*cos(this.angle+85)}get y(){return this.parent.game.player.y-65*sin(this.angle+85)}update(){this.angle>=360&&(this.angle=this.angle-360),this.angle+=this.parent.spinnerSpeed,this.rotation+=30,this.checkCollisions(this.parent.game.getTargets())}checkCollisions(e){for(let i=0;i<e.length;i++){let s=e[i];k(s,this)&&(!s.lastHurt||s.lastHurt&&frameCount-s.lastHurt>20)&&(s.lastHurt=frameCount,s.hurt(this.parent.damage))}}};var te=class{level=0;max=!1;sprites=[];data=[[10,100,1,0,"Strikes random target on screen"],[5,50,0,0,"Greater Radius and Increased Damage"],[5,50,1,0,"+1 Bolt"],[5,25,1,0,"+1 Bolt, Increased Radius and Damage"],[0,25,1,0,"+1 Bolt, Increased Radius and Damage"]];bolts=[];numBolts=0;cooldown=180;radius=5;damage=10;frames=0;constructor(e){this.name="Lightning",this.maxLevel=5,this.description=this.data[0][4],this.image=e.assets.images.lightning,this.game=e,this.loadSprites(e.assets.images.lightning_sprites)}loadSprites(e){var i=e.width/5,s=e.height/2;for(let h=0;h<2;h++)for(let o=0;o<5;o++){var r=o*s,a=h*i;this.sprites.push(e.get(r,a,i,s))}}upgrade(){if(this.max===!0)return!1;this.level++;var e=this.level-1,i=this.data[e];this.radius+=i[0],this.damage+=i[1],this.numBolts+=i[2],this.level+1<=this.maxLevel?this.description=this.data[this.level][4]:this.max=!0}render(){this.frames++,this.bolts.forEach(e=>e.draw())}update(){if(this.frames%this.cooldown===0)for(let e=0;e<this.numBolts;e++)setTimeout(()=>{this.bolts.push(new ye(this))},e*300);else this.bolts.forEach(e=>e.update())}},ye=class{constructor(e){if(this.parent=e,this.angle=Math.random()*360,this.radius=this.parent.radius,this.damage=this.parent.damage,this.frames=0,this.sprites=this.parent.sprites,this.currentSprite=0,this.target=this.selectTarget(),this.target===null)return this.destroy();this.x=this.target.x,this.y=this.target.y,this.radius<5&&(this.radius=5),this.damage<1&&(this.damage=1)}selectTarget(){var e=window.game.getTargets().filter(i=>{var{x:s,y:r}=i;return s>0&&s<width&&r>0&&r<height});return e.length===0?null:e[Math.floor(Math.random()*e.length)]}draw(){try{if(this.target===null)return;var{x:e,y:i}=this;this.frames<=80&&(graphic.push(),graphic.translate(e,i),graphic.fill(0,0,255,50),graphic.circle(0,0,this.radius*2),graphic.pop()),graphic.push(),graphic.imageMode(CENTER);var s=40,r=this.sprites[this.currentSprite].height*(s/this.sprites[this.currentSprite].width);graphic.image(this.sprites[this.currentSprite],e,i,s,r),graphic.pop()}catch(a){console.error(a)}}update(){this.frames++,this.frames%60===0&&(this.currentSprite++,this.currentSprite>=this.sprites.length&&(this.currentSprite=0)),this.frames>2e3&&this.destroy(),this.frames<2&&this.checkCollisions(window.game.getTargets())}checkCollisions(e){for(let s=0;s<e.length;s++){var i=e[s];k(i,this)&&i.hurt(this.damage)}}destroy(){var e=this.parent.bolts.indexOf(this);e>-1&&this.parent.bolts.splice(e,1)}};var ie=class{level=0;max=!1;data=[[1,"Heal 1% every 5 seconds"],[2,"Heal 2% every 5 seconds"],[3,"Heal 3% every 5 seconds"],[4,"Heal 4% every 5 seconds"],[5,"Heal 5% every 5 seconds"]];constructor(e){this.name="Healing",this.maxLevel=5,this.description=this.data[0][1],this.image=e.assets.images.medbag,this.game=e}heal=0;upgrade(){if(this.max===!0)return!1;this.level++;var e=this.level-1,i=this.data[e];this.heal=i[0],this.level+1<=this.maxLevel?this.description=this.data[this.level][1]:this.max=!0}render(){}update(){this.game.frames%300===0&&(this.game.player.health+=this.heal),this.game.player.health>this.game.player.maxHealth&&(this.game.player.health=this.game.player.maxHealth)}};var se=class{level=0;max=!1;data=[[30,0,"Spawns Forcefield around player"],[15,25,"Increased Radius and Damage"],[15,25,"Increased Radius and Damage"],[15,50,"Increased Radius and Damage"],[20,30,"Increased Radius and Damage"]];radius=0;damage=15;cooldown=25;constructor(e){this.name="Forcefield",this.maxLevel=5,this.description=this.data[0][2],this.image=e.assets.images.forcefield,this.game=e}upgrade(){if(this.max===!0)return!1;this.level++;var e=this.level-1,i=this.data[e];this.radius+=i[0],this.damage*=1+i[1]/100,this.cooldown+=3,this.level+1<=this.maxLevel?this.description=this.data[this.level][2]:this.max=!0}get x(){return window.game.player.x}get y(){return window.game.player.y}render(){this.level>0&&(graphic.push(),graphic.fill(100,255,0,50),graphic.stroke(100,255,0),graphic.strokeWeight(1),graphic.ellipse(window.game.player.x,window.game.player.y,this.radius*2,this.radius*2),graphic.fill(255,255,255,0),graphic.stroke(255,255,255,frameCount%this.cooldown*(this.radius/this.cooldown)),graphic.ellipse(window.game.player.x,window.game.player.y,frameCount%this.cooldown*(this.radius*2/this.cooldown)),graphic.pop())}update(){if(this.level>0)for(var e=window.game.getTargets(),i=0;i<e.length;i++){var s=e[i];k(s,this)&&frameCount%this.cooldown===0&&s.hurt(this.damage)}}};var re=class{level=0;max=!1;data=[[5,"+5% Speed"],[5,"+10% Speed"],[5,"+15% Speed"],[5,"+20% Speed"],[5,"+25% Speed"]];constructor(e){this.name="Energy Drink",this.maxLevel=5,this.description=this.data[0][1],this.image=e.assets.images.energy,this.game=e}upgrade(){if(this.max===!0)return!1;this.level++;var e=this.level-1,i=this.data[e];this.game.player.speed*=1+i[0]/100,this.level+1<=this.maxLevel?this.description=this.data[this.level][1]:this.max=!0}render(){}update(){}};var ae=class{level=0;max=!1;data=[[1,0,0,0,"Ball bounces around the screen"],[1,10,25,0,"+1 Ball, Increased Speed and Reduced Cooldown"],[0,0,10,100,"Increased Damage and Reduced Cooldown"],[1,10,0,25,"+1 Ball, Increased Speed and Damage"],[1,10,10,50,"+1 Ball, Increased Speed, Damage and Reduced Cooldown"]];balls=[];cooldown=300;numBalls=0;ballSpeed=5;damage=20;constructor(e){this.name="Ball",this.maxLevel=5,this.description=this.data[0][4],this.image=e.assets.images.ball,this.game=e}upgrade(){if(this.max===!0)return!1;this.level++;var e=this.level-1,i=this.data[e];this.numBalls+=i[0],this.ballSpeed*=1+i[1]/100,this.cooldown*=1-i[2]/100,this.damage*=1+i[3]/100,this.level+1<=this.maxLevel?this.description=this.data[this.level][4]:this.max=!0}render(){this.balls.forEach(e=>e.render())}update(){var e=this.game.getTargets();if(this.balls.forEach(i=>i.update(e)),this.game.frames%this.cooldown===0)for(let i=0;i<this.numBalls;i++)this.balls.push(new be(this.game,this.ballSpeed,this))}},be=class{get damage(){return this.parent.damage}constructor(e,i,s){this.game=e,this.speed=i,this.parent=s,this.x=e.player.x,this.y=e.player.y,this.radius=8,this.rotation=0,this.time=0,this.xSpeed=random(-this.speed,this.speed),this.ySpeed=random(-this.speed,this.speed)}render(){graphic.push(),graphic.translate(this.x,this.y),graphic.imageMode(CENTER),graphic.rotate(this.rotation),graphic.image(this.parent.image,0,0,this.radius*3,this.radius*3),graphic.pop()}update(e){this.x+=this.xSpeed,this.y+=this.ySpeed,this.time++,this.time>600&&this.parent.balls.splice(this.parent.balls.indexOf(this),1),(this.x<0||this.x>width)&&(this.xSpeed*=-1,this.x=this.x<0?0:width),(this.y<0||this.y>height)&&(this.ySpeed*=-1,this.y=this.y<0?0:height),this.rotation+=10,e.forEach(i=>{k(i,this)&&(!i.lastHurtBall||i.lastHurtBall&&frameCount-i.lastHurtBall>20)&&(i.lastHurtBall=frameCount,i.hurt(this.damage))})}};var de=class{listeners=[];time=0;selected=!1;constructor(e,i,s){this.game=e,this.upgrades=i,this.level=s,this.on("select",r=>{this.selected=!0,r&&(r.upgrade(),this.game.upgrades.currentUpgrades.find(a=>a[0]===r)?this.game.upgrades.currentUpgrades.find(a=>a[0]===r)[1]=r.level:this.game.upgrades.currentUpgrades.push([r,r.level])),this.emit("upgrade")})}createUpgradeGraphic(e={name:"None",description:"No upgrade available",image:null}){let i=createGraphics(120,200);if(i.background(this.game.menuColor),i.rectMode(CORNER),i.textWrap(WORD),i.fill(0),i.textAlign(CENTER),i.textSize(20),i.text(e.name,60,30),e.image){i.imageMode(CENTER);var s=100,r=e.image.height*(s/e.image.width);i.image(e.image,65,85,s,r)}return i.textSize(13),i.text(e.description||"",10,135,100,60),i.fill(0),i.rect(0,0,120,2),i.rect(0,0,2,200),i.rect(0,198,120,2),i.rect(118,0,2,200),i}render(){if(this.fading){this.time--,graphic.push(),graphic.rectMode(CORNER),graphic.fill(0,0,0,255*((this.time>30?30:this.time)/30)*.5),graphic.rect(0,0,width,height),graphic.pop();return}else this.time++;graphic.push(),graphic.rectMode(CORNER),graphic.imageMode(CENTER),graphic.fill(0,0,0,255*((this.time>30?30:this.time)/30)*.5),graphic.rect(0,0,width,height);var e=this.createUpgradeGraphic(this.upgrades[0]||void 0),i=this.createUpgradeGraphic(this.upgrades[1]||void 0),s=this.createUpgradeGraphic(this.upgrades[2]||void 0);e.x=width/2-150,i.x=width/2,s.x=width/2+150,e.y=height/2+75,i.y=height/2+75,s.y=height/2+75,e.width=120,i.width=120,s.width=120,e.height=200,i.height=200,s.height=200,graphic.fill("gold"),graphic.rectMode(CENTER),graphic.strokeWeight(3),graphic.stroke(0),graphic.rect(width/2,200,200,40),graphic.noStroke(),graphic.fill("black"),graphic.textSize(22),graphic.textAlign(CENTER),graphic.text("Upgrades",width/2,208),graphic.imageMode(CORNER),c(e)?(cursor(HAND),graphic.push(),graphic.image(e,e.x-60,e.y-100),graphic.pop()):graphic.image(e,e.x-60,e.y-100),c(i)?(cursor(HAND),graphic.push(),graphic.image(i,i.x-60,i.y-100),graphic.pop()):graphic.image(i,i.x-60,i.y-100),c(s)?(cursor(HAND),graphic.push(),graphic.image(s,s.x-60,s.y-100),graphic.pop()):graphic.image(s,s.x-60,s.y-100),mouseIsPressed&&!this.selected&&(c(e)?this.emit("select",this.upgrades[0]):c(i)?this.emit("select",this.upgrades[1]):c(s)&&this.emit("select",this.upgrades[2])),e.remove(),i.remove(),s.remove(),graphic.pop()}on(e,i){this.listeners.push([e,i])}emit(e,...i){for(let s=0;s<this.listeners.length;s++)this.listeners[s][0]===e&&this.listeners[s][1](...i)}fadeOut(){return new Promise((e,i)=>{this.time=30,this.fading=!0;let s=setInterval(()=>{this.time<15&&(this.fading=!1,clearInterval(s),e())},100)})}},D=class{currentUpgrades=[];constructor(e){this.game=e,this.upgrades=[new K(e),new ee(e),new te(e),new ie(e),new se(e),new re(e),new ae(e)]}select(e){var i=[];if(e>this.upgrades.length)for(let a=0;a<e;a++)i.push(this.upgrades[a]||null);else{var s=this.upgrades.slice(0);for(let a=0;a<e;a++){var r=Math.floor(random(0,s.length));i.push(s[r]),s.splice(r,1)}}for(let a=0;a<i.length;a++)this.currentUpgrades.find(h=>h[0]===i[a])&&this.currentUpgrades.find(h=>h[0]===i[a])[1]>=i[a].maxLevel&&i.splice(a,1,null);return i}renderUpgrades(e){for(let r=0;r<e.length;r++){var i=e[r][0],s=e[r][1];i.render(s)}}update(e){for(let r=0;r<e.length;r++){var i=e[r][0],s=e[r][1];i.update(s)}}};var A=class{damages=[];constructor(e){this.game=e}add(e,i,s){this.damages.push({damage:e,x:i,y:s,time:20})}render(e){for(var i=0;i<e.length;i++){var s=e[i];s.time-=1,graphic.push(),graphic.rectMode(CENTER),graphic.fill("gold"),graphic.textSize(12),graphic.stroke(0),graphic.strokeWeight(2),graphic.textAlign(CENTER),graphic.text(Math.round(s.damage),s.x,s.y+(60-s.time)*.6),graphic.pop(),s.time<1&&e.splice(i,1)}}};var W=class{constructor(e){this.game=e,this.alerts=[]}addAlert(e,i=120){this.alerts.push({text:e,duration:i})}render(e){for(let i=0;i<e.length;i++){let s=e[i];graphic.push(),graphic.rectMode(CENTER),graphic.fill(255,0,0,100*(1-sin(3*(s.duration%60))*.4)),graphic.rect(width/2,150,370,50,5),graphic.fill(0),graphic.textAlign(CENTER),graphic.textSize(26),graphic.text(s.text,width/2,160,340,50),graphic.pop(),this.game.upgradeScreen||(s.duration--,s.duration<=0&&this.alerts.splice(i,1))}}};function Ce(t,e){if(Array.isArray(t))return t[Math.floor(Math.random()*t.length)];if(typeof t=="object"){let i=Object.keys(t);return t[i[Math.floor(Math.random()*i.length)]]}else return typeof t=="number"&&typeof e=="number"?Math.random()*(e-t)+t:typeof t=="number"&&typeof e>"u"?Math.random()*t:Math.random()}function Re(t,e,i,s){let r=i-t,a=s-e;return Math.sqrt(r*r+a*a)}window.buttons={power:null};var xe,Xe=!0,Pe=!1;function Oe(){if(Xe)return xe.working?xe.render():(Pe||(window.game.player=new le(width/2,height/2),window.game.background=new B,window.game.enemies=new M(window.game),window.game.objects=new N(window.game),window.game.currency=new H(window.game),window.game.upgrades=new D(window.game),window.game.damage=new A(window.game),window.game.alerts=new W(window.game)),Pe=!0,window.game.render());background(0)}function _e(){xe=new ne,p5.disableFriendlyErrors=!0,createCanvas(550,700),imageMode(CENTER),rectMode(CENTER),angleMode(DEGREES),frameRate(60),window.random=Ce,window.dist=Re}var ce=0,Be=[(t,e=!1)=>{t.frame%30===0&&t.enemies.spawnEnemy("zombie")},(t,e=!1)=>{e&&(t.enemies.types.Zombie.prototype.health=30,t.objects.spawnObject("box",t.objects.randomSpawnPoint()),t.objects.spawnObject("box",t.objects.randomSpawnPoint())),t.frame%40===0&&t.enemies.spawnEnemy("butterfly"),t.frame%30===0&&t.enemies.spawnEnemy("zombie")},(t,e=!1)=>{e&&(t.objects.spawnObject("box",t.objects.randomSpawnPoint()),t.objects.spawnObject("box",t.objects.randomSpawnPoint())),t.frame%35===0&&t.enemies.spawnEnemy("butterfly"),t.frame%25===0&&t.enemies.spawnEnemy("zombie")},(t,e=!1)=>{e&&(t.enemies.types.Zombie.prototype.health=35,t.enemies.types.Butterfly.prototype.health=15,t.objects.spawnObject("box",t.objects.randomSpawnPoint()),t.objects.spawnObject("box",t.objects.randomSpawnPoint())),t.frame%30===0&&t.enemies.spawnEnemy("butterfly"),t.frame%20===0&&t.enemies.spawnEnemy("zombie")},(t,e=!1)=>{e&&(t.objects.spawnObject("box",t.objects.randomSpawnPoint()),t.objects.spawnObject("box",t.objects.randomSpawnPoint())),t.frame%25===0&&(t.enemies.spawnEnemy("zombie"),t.enemies.spawnEnemy("zombie"))},(t,e=!1)=>{e&&(t.objects.spawnObject("box",t.objects.randomSpawnPoint()),t.objects.spawnObject("box",t.objects.randomSpawnPoint())),t.frame%30===0&&(t.enemies.spawnEnemy("zombie"),t.enemies.spawnEnemy("zombie"))},(t,e=!1)=>{e&&(t.enemies.types.Zombie.prototype.health=40,t.objects.spawnObject("box",t.objects.randomSpawnPoint()),t.objects.spawnObject("box",t.objects.randomSpawnPoint())),t.frame%30===0&&(t.enemies.spawnEnemy("zombie"),t.enemies.spawnEnemy("zombie"))},(t,e=!1)=>{e&&(t.objects.spawnObject("box",t.objects.randomSpawnPoint()),t.objects.spawnObject("box",t.objects.randomSpawnPoint())),t.frame%30===0&&(t.enemies.spawnEnemy("zombie"),t.enemies.spawnEnemy("zombie"))},(t,e=!1)=>{e&&(t.objects.spawnObject("box",t.objects.randomSpawnPoint()),t.objects.spawnObject("box",t.objects.randomSpawnPoint())),t.frame%40===0&&(t.enemies.spawnEnemy("zombie"),t.enemies.spawnEnemy("zombie"))},(t,e=!1)=>{e&&(t.objects.spawnObject("box",t.objects.randomSpawnPoint()),t.objects.spawnObject("box",t.objects.randomSpawnPoint()),t.enemies.spawnEnemy("zombie_boss")),t.frame%30===0&&t.enemies.spawnEnemy("zombie")},(t,e=!1)=>{e&&(t.enemies.types.ZombieBoss.prototype.health=1100,t.enemies.types.Butterfly.prototype.health=20,t.objects.spawnObject("box",t.objects.randomSpawnPoint()),t.objects.spawnObject("box",t.objects.randomSpawnPoint())),t.frame%30===0&&(t.enemies.spawnEnemy("butterfly"),t.enemies.spawnEnemy("butterfly")),t.frame%20===0&&t.enemies.spawnEnemy("zombie")},(t,e=!1)=>{e&&(t.objects.spawnObject("box",t.objects.randomSpawnPoint()),t.objects.spawnObject("box",t.objects.randomSpawnPoint())),t.frame%30===0&&t.enemies.spawnEnemy("butterfly"),t.frame%20===0&&(t.enemies.spawnEnemy("zombie"),t.enemies.spawnEnemy("zombie"))},(t,e=!1)=>{e&&(t.enemies.types.Butterfly.prototype.health=23,t.objects.spawnObject("box",t.objects.randomSpawnPoint()),t.objects.spawnObject("box",t.objects.randomSpawnPoint())),t.frame%40===0&&(t.enemies.spawnEnemy("butterfly"),t.enemies.spawnEnemy("butterfly")),t.frame%40===0&&(t.enemies.spawnEnemy("zombie"),t.enemies.spawnEnemy("zombie"),t.enemies.spawnEnemy("zombie"))},(t,e=!1)=>{e&&(t.enemies.types.Butterfly.prototype.health=25,t.objects.spawnObject("box",t.objects.randomSpawnPoint()),t.objects.spawnObject("box",t.objects.randomSpawnPoint())),t.frame%40===0&&t.enemies.spawnEnemy("butterfly"),t.frame%50===0&&(t.enemies.spawnEnemy("zombie"),t.enemies.spawnEnemy("zombie"))},(t,e=!1)=>{e&&(t.enemies.types.Zombie.prototype.health=50,t.objects.spawnObject("box",t.objects.randomSpawnPoint()),t.objects.spawnObject("box",t.objects.randomSpawnPoint())),t.frame%30===0&&t.enemies.spawnEnemy("zombie")},(t,e=!1)=>{e&&(t.enemies.types.Zombie.prototype.health=50,t.enemies.types.Butterfly.prototype.health=25,t.alerts.addAlert("Enemies Incoming!",300),setTimeout(()=>{for(let i=0;i<80;i++)t.enemies.spawnEnemy("butterfly");for(let i=0;i<30;i++)t.enemies.spawnEnemy("zombie")},5e3),t.objects.spawnObject("box",t.objects.randomSpawnPoint()),t.objects.spawnObject("box",t.objects.randomSpawnPoint())),t.frame%60===0&&t.enemies.spawnEnemy("zombie")},(t,e=!1)=>{e&&(t.enemies.types.ZombieBoss.prototype.health=1200,t.enemies.types.Zombie.prototype.health=45,t.objects.spawnObject("box",t.objects.randomSpawnPoint())),t.frame%37===0&&t.enemies.spawnEnemy("butterfly"),t.frame%35===0&&(t.enemies.spawnEnemy("zombie"),t.enemies.spawnEnemy("zombie"))},(t,e=!1)=>{e&&t.objects.spawnObject("box",t.objects.randomSpawnPoint()),t.frame%40===0&&(t.enemies.spawnEnemy("butterfly"),t.enemies.spawnEnemy("butterfly")),t.frame%34===0&&t.enemies.spawnEnemy("zombie")},(t,e=!1)=>{e&&(t.enemies.types.Butterfly.prototype.health=18,t.objects.spawnObject("box",t.objects.randomSpawnPoint())),t.frame%33===0&&(t.enemies.spawnEnemy("butterfly"),t.enemies.spawnEnemy("butterfly"),t.enemies.spawnEnemy("zombie"))},(t,e=!1)=>{e&&t.objects.spawnObject("box",t.objects.randomSpawnPoint()),t.frame%32===0&&t.enemies.spawnEnemy("butterfly"),t.frame%31===0&&(t.enemies.spawnEnemy("zombie"),t.enemies.spawnEnemy("zombie"),t.enemies.spawnEnemy("zombie"))},(t,e=!1)=>{if(e&&(t.enemies.types.Butterfly.prototype.health=19,t.objects.spawnObject("box",t.objects.randomSpawnPoint())),t.frame%40===0)for(let i=0;i<3;i++)t.enemies.spawnEnemy("butterfly");t.frame%29===0&&t.enemies.spawnEnemy("zombie")},(t,e=!1)=>{e&&(t.enemies.types.Zombie.prototype.health=48,t.objects.spawnObject("box",t.objects.randomSpawnPoint())),t.frame%25===0&&t.enemies.spawnEnemy("zombie"),t.frame%35===0&&t.enemies.spawnEnemy("butterfly")},(t,e=!1)=>{if(e&&(t.enemies.types.Butterfly.prototype.health=23,t.objects.spawnObject("box",t.objects.randomSpawnPoint())),t.frame%24===0)for(let i=0;i<2;i++)t.enemies.spawnEnemy("zombie");t.frame%34===0&&t.enemies.spawnEnemy("butterfly")},(t,e=!1)=>{if(e&&t.objects.spawnObject("box",t.objects.randomSpawnPoint()),t.frame%23===0&&t.enemies.spawnEnemy("zombie"),t.frame%33===0)for(let i=0;i<2;i++)t.enemies.spawnEnemy("butterfly")},(t,e=!1)=>{if(e&&(t.enemies.types.ZombieBoss.prototype.health=1300,t.enemies.types.Zombie.prototype.health=50,t.enemies.spawnEnemy("zombie_boss"),t.objects.spawnObject("box",t.objects.randomSpawnPoint())),t.frame%22===0)for(let i=0;i<2;i++)t.enemies.spawnEnemy("zombie");t.frame%32===0&&t.enemies.spawnEnemy("butterfly")},(t,e=!1)=>{if(e&&t.objects.spawnObject("box",t.objects.randomSpawnPoint()),t.frame%21===0&&t.enemies.spawnEnemy("zombie"),t.frame%31===0)for(let i=0;i<3;i++)t.enemies.spawnEnemy("butterfly")},(t,e=!1)=>{if(e&&(t.enemies.types.Zombie.prototype.health=52,t.objects.spawnObject("box",t.objects.randomSpawnPoint())),t.frame%20===0)for(let i=0;i<3;i++)t.enemies.spawnEnemy("zombie");t.frame%30===0&&t.enemies.spawnEnemy("butterfly")},(t,e=!1)=>{if(e&&t.objects.spawnObject("box",t.objects.randomSpawnPoint()),t.frame%19===0&&t.enemies.spawnEnemy("zombie"),t.frame%29===0)for(let i=0;i<2;i++)t.enemies.spawnEnemy("butterfly")},(t,e=!1)=>{if(e&&(t.enemies.spawnEnemy("zombie_boss"),t.objects.spawnObject("box",t.objects.randomSpawnPoint())),t.frame%18===0)for(let i=0;i<2;i++)t.enemies.spawnEnemy("zombie");t.frame%28===0&&t.enemies.spawnEnemy("butterfly")},(t,e=!1)=>{if(e&&(t.enemies.types.Butterfly.prototype.health=25,t.objects.spawnObject("box",t.objects.randomSpawnPoint())),t.frame%17===0)for(let i=0;i<3;i++)t.enemies.spawnEnemy("zombie");t.frame%27===0&&t.enemies.spawnEnemy("butterfly")},(t,e=!1)=>{if(e&&(t.enemies.types.ZombieBoss.prototype.health=1400,t.objects.spawnObject("box",t.objects.randomSpawnPoint())),t.frame%16===0&&t.enemies.spawnEnemy("zombie"),t.frame%26===0)for(let i=0;i<2;i++)t.enemies.spawnEnemy("butterfly")},(t,e=!1)=>{if(e&&(t.enemies.spawnEnemy("zombie_boss"),t.objects.spawnObject("box",t.objects.randomSpawnPoint())),t.frame%15===0)for(let i=0;i<2;i++)t.enemies.spawnEnemy("zombie");t.frame%25===0&&t.enemies.spawnEnemy("butterfly")},(t,e=!1)=>{if(e&&(t.enemies.types.Zombie.prototype.health=54,t.objects.spawnObject("box",t.objects.randomSpawnPoint())),t.frame%14===0)for(let i=0;i<2;i++)t.enemies.spawnEnemy("zombie");t.frame%24===0&&t.enemies.spawnEnemy("butterfly")},(t,e=!1)=>{if(e&&t.objects.spawnObject("box",t.objects.randomSpawnPoint()),t.frame%13===0&&t.enemies.spawnEnemy("zombie"),t.frame%23===0)for(let i=0;i<2;i++)t.enemies.spawnEnemy("butterfly")},(t,e=!1)=>{if(e&&(t.enemies.spawnEnemy("zombie_boss"),t.objects.spawnObject("box",t.objects.randomSpawnPoint())),t.frame%12===0)for(let i=0;i<2;i++)t.enemies.spawnEnemy("zombie");t.frame%22===0&&t.enemies.spawnEnemy("butterfly")},(t,e=!1)=>{e&&(t.enemies.types.Butterfly.prototype.health=27,t.objects.spawnObject("box",t.objects.randomSpawnPoint())),t.frame%11===0&&t.enemies.spawnEnemy("zombie"),t.frame%21===0&&t.enemies.spawnEnemy("butterfly")},(t,e=!1)=>{if(e&&(t.enemies.types.ZombieBoss.prototype.health=1500,t.objects.spawnObject("box",t.objects.randomSpawnPoint())),t.frame%10===0)for(let i=0;i<3;i++)t.enemies.spawnEnemy("zombie");t.frame%20===0&&t.enemies.spawnEnemy("butterfly")},(t,e=!1)=>{if(e&&(t.enemies.spawnEnemy("zombie_boss"),t.objects.spawnObject("box",t.objects.randomSpawnPoint())),t.frame%11===0&&t.enemies.spawnEnemy("zombie"),t.frame%19===0)for(let i=0;i<2;i++)t.enemies.spawnEnemy("butterfly")},(t,e=!1)=>{if(e&&(t.enemies.types.Zombie.prototype.health=56,t.objects.spawnObject("box",t.objects.randomSpawnPoint())),t.frame%8===0)for(let i=0;i<2;i++)t.enemies.spawnEnemy("zombie");t.frame%18===0&&t.enemies.spawnEnemy("butterfly")},(t,e=!1)=>{if(e&&(t.enemies.types.ZombieBoss.prototype.health=1700,t.objects.spawnObject("box",t.objects.randomSpawnPoint())),t.frame%10===0&&t.enemies.spawnEnemy("zombie"),t.frame%17===0)for(let i=0;i<3;i++)t.enemies.spawnEnemy("butterfly")},(t,e=!1)=>{if(e&&(t.enemies.types.Butterfly.prototype.health=29,t.objects.spawnObject("box",t.objects.randomSpawnPoint())),t.frame%6===0)for(let i=0;i<2;i++)t.enemies.spawnEnemy("zombie");t.frame%16===0&&t.enemies.spawnEnemy("butterfly")},(t,e=!1)=>{if(e&&(t.enemies.spawnEnemy("zombie_boss"),t.objects.spawnObject("box",t.objects.randomSpawnPoint())),t.frame%15===0&&t.enemies.spawnEnemy("zombie"),t.frame%15===0)for(let i=0;i<6;i++)t.enemies.spawnEnemy("butterfly")},(t,e=!1)=>{if(e&&(t.enemies.types.ZombieBoss.prototype.health=1800,t.enemies.types.Zombie.prototype.health=58,t.objects.spawnObject("box",t.objects.randomSpawnPoint())),t.frame%4===0)for(let i=0;i<2;i++)t.enemies.spawnEnemy("zombie");t.frame%14===0&&t.enemies.spawnEnemy("butterfly")},(t,e=!1)=>{if(e&&t.objects.spawnObject("box",t.objects.randomSpawnPoint()),t.frame%10===0&&t.enemies.spawnEnemy("zombie"),t.frame%13===0)for(let i=0;i<3;i++)t.enemies.spawnEnemy("butterfly")},(t,e=!1)=>{e&&(t.enemies.spawnEnemy("zombie_boss"),t.objects.spawnObject("box",t.objects.randomSpawnPoint())),t.frame%5===0&&t.enemies.spawnEnemy("zombie"),t.frame%12===0&&t.enemies.spawnEnemy("butterfly")},(t,e=!1)=>{if(e&&(t.enemies.types.Butterfly.prototype.health=30,t.objects.spawnObject("box",t.objects.randomSpawnPoint())),t.frame%5===0&&t.enemies.spawnEnemy("zombie"),t.frame%11===0)for(let i=0;i<4;i++)t.enemies.spawnEnemy("butterfly")},(t,e=!1)=>{e&&(t.enemies.types.ZombieBoss.prototype.health=2e3,t.objects.spawnObject("box",t.objects.randomSpawnPoint())),t.frame%4===0&&(t.enemies.spawnEnemy("zombie"),t.enemies.spawnEnemy("butterfly"))},(t,e=!1)=>{e&&(t.enemies.spawnEnemy("zombie_boss"),t.enemies.types.Zombie.prototype.health=60,t.objects.spawnObject("box",t.objects.randomSpawnPoint())),t.frame%3===0&&(t.enemies.spawnEnemy("zombie"),t.enemies.spawnEnemy("butterfly"))},(t,e=!1)=>{e&&t.objects.spawnObject("box",t.objects.randomSpawnPoint()),t.frame%2===0&&(t.enemies.spawnEnemy("zombie"),t.enemies.spawnEnemy("butterfly"))},(t,e=!1)=>{if(ce>=60*60){let i=t.enemies.enemies;if(ce===60*60){for(let s=0;s<i.length;s++){let r=i[s];r.dropChance=0,r.kill(),i.splice(s,0,null)}t.enemies.enemies.splice(0,1/0),t.objects.spawnObject("spawner",[1500,1500])}return ce++}if(e){t.enemies.spawnEnemy("zombie_boss"),t.enemies.types.Zombie.prototype.health=100,t.enemies.types.Butterfly.prototype.health=50,t.enemies.types.ZombieBoss.prototype.health=2500;for(let i=0;i<5;i++)t.objects.spawnObject("box",t.objects.randomSpawnPoint())}t.frame%10===0&&(t.enemies.spawnEnemy("zombie"),t.enemies.spawnEnemy("butterfly")),t.frame%40===0&&t.enemies.spawnEnemy("zombie_boss"),ce++}],Ie=1;function Ge(t,e){return Math.round(t*Math.pow(10,e))/Math.pow(10,e)}function ve(t){return t.screen==="pause"||t.screen==="over"||t.screen==="win"?!1:t.player.dead===!0?t.player.deathState<=100:(t.timer>30&&Ge(t.timer,6)%30===0&&t.level<50&&t.level++,t.level!==Ie&&(Ie=t.level,Be[t.level-1](t,!0)),Be[t.level-1](t),!0)}var p={width:48,height:34,y:12,triangle:{width:8,height:6}},R={width:25,height:25,get x(){return width/2-55},y:18},P={width:25,height:25,get x(){return width/2+55},y:18},Te=19,F=0;function he(t,e=!1){let i=t.menuColor;graphic.push(),graphic.rectMode(CORNER),graphic.fill(i),graphic.textFont(t.assets.fonts.roboto),e||(graphic.rect(0,0,width,36),graphic.fill("black"),graphic.rect(0,35,width,2),graphic.push(),graphic.fill(i),graphic.beginShape(),graphic.vertex((width-p.width)/2,p.y),graphic.vertex((width+p.width)/2,p.y),graphic.vertex((width+p.width)/2+p.triangle.width,p.y+p.triangle.height),graphic.vertex((width+p.width)/2+p.triangle.width,p.y+(p.height-p.triangle.height)),graphic.vertex((width+p.width)/2,p.y+p.height),graphic.vertex((width-p.width)/2,p.y+p.height),graphic.vertex((width-p.width)/2-p.triangle.width,p.y+(p.height-p.triangle.height)),graphic.vertex((width-p.width)/2-p.triangle.width,p.y+p.triangle.height),graphic.endShape(CLOSE),graphic.textAlign(CENTER),graphic.textSize(Te),graphic.fill("black"),graphic.text(`${t.time.min<10?"0"+t.time.min:t.time.min}:${t.time.secs<10?"0"+t.time.secs:t.time.secs}`,width/2-p.width/2,p.y+p.height/2+Te/2-3,p.width,p.height),graphic.pop(),graphic.rectMode(CENTER),graphic.imageMode(CENTER),graphic.image(t.assets.images.icon,20,18,25,25),graphic.fill("black"),graphic.textSize(8),graphic.textAlign(CENTER),graphic.text("GEMICI.IO",width/2,9),graphic.fill("yellow"),graphic.rect(R.x,R.y,R.width,R.height),graphic.image(t.assets.images.pause_image,R.x,R.y,R.width*.65,R.height*.65),graphic.fill("red"),graphic.rect(P.x,P.y,P.width,P.height),graphic.image(t.assets.images.exit_image,P.x,P.y,P.width*.65,P.height*.65),graphic.fill("gray"),graphic.rect(width-15,18,25,25),graphic.fill("gray"),graphic.rect(width-50,18,25,25),t.screen==="game"&&(c(R)&&(mouseIsPressed&&t.pause(),cursor(HAND)),c(P)&&(mouseIsPressed&&t.exit(),cursor(HAND))));var s=215*2;graphic.push(),graphic.rectMode(CORNER),graphic.fill("black"),graphic.beginShape(),graphic.vertex(width/2-215,52),graphic.vertex(width/2+215+10,52),graphic.vertex(width/2+215,74),graphic.vertex(width/2-215-10,74),graphic.endShape(CLOSE),graphic.fill(i),graphic.beginShape(),graphic.vertex(width/2-213,54),graphic.vertex(width/2+213+8,54),graphic.vertex(width/2+213,72),graphic.vertex(width/2-213-8,72),graphic.endShape(CLOSE),graphic.fill("#44ba38");var r=t.currency.current;F>r||F+.1>=r?F=r:F+=(r-F)/5;var a=F/t.currency.required,h=a*s;h+4>s&&(h=s-4),graphic.beginShape(),graphic.vertex(width/2-213,54),graphic.vertex(width/2-213+h+8,54),graphic.vertex(width/2-213+h,72),graphic.vertex(width/2-213-8,72),graphic.endShape(CLOSE),graphic.fill("black");for(let n=13;n<s;n+=30)graphic.rect(width/2-215+n,52,2,22);if(graphic.pop(),t.enemies_arr.find(n=>n instanceof C)){graphic.fill("black"),graphic.beginShape(),graphic.vertex(width/2-215,87),graphic.vertex(width/2+215+10,87),graphic.vertex(width/2+215,109),graphic.vertex(width/2-215-10,109),graphic.endShape(CLOSE),graphic.fill(i),graphic.beginShape(),graphic.vertex(width/2-213,89),graphic.vertex(width/2+213+8,89),graphic.vertex(width/2+213,107),graphic.vertex(width/2-213-8,107),graphic.endShape(CLOSE),graphic.fill("#aa6118");var o=t.enemies_arr.find(E=>E instanceof C),a=o.health/o.maxHealth,h=a*s;h+4>s&&(h=s-4),graphic.beginShape(),graphic.vertex(width/2-213,89),graphic.vertex(width/2-213+h+8,89),graphic.vertex(width/2-213+h,107),graphic.vertex(width/2-213-8,107),graphic.endShape(CLOSE)}graphic.push(),graphic.fill(i),graphic.stroke(0),graphic.strokeWeight(3),graphic.beginShape(),graphic.vertex(width,height),graphic.vertex(0,height),graphic.vertex(0,height-13),graphic.vertex(width/2-50,height-13),graphic.vertex(width/2-43,height-27),graphic.vertex(width/2+43,height-27),graphic.vertex(width/2+50,height-13),graphic.vertex(width,height-13),graphic.endShape(),graphic.pop(),graphic.push(),graphic.rectMode(CENTER),graphic.textSize(14),graphic.fill(0),graphic.textAlign(CENTER),graphic.text(`Round ${t.level}`,width/2,height-10,80),graphic.pop(),graphic.pop()}var ge=17,me={width:300,height:300,get y(){return height/2-100},get x(){return width/2}},b={width:200,height:50,get x(){return width/2},get y(){return height/2+100}},x={width:200,height:50,get x(){return width/2},get y(){return height/2+170}};function Me(t){let e="#000004";graphic.push(),graphic.rectMode(CORNER),graphic.fill(e),graphic.textFont(t.assets.fonts.roboto),graphic.background(e),graphic.imageMode(CENTER),graphic.image(t.assets.images.logo,me.x,me.y,me.width,me.height);let i="#fff",s=10;graphic.noStroke(),graphic.fill(i),graphic.rect(b.x-b.width/2,b.y-b.height/2,b.width,b.height,s),graphic.noStroke(),graphic.fill("black"),graphic.textSize(ge),graphic.textAlign(CENTER),graphic.text("Play",b.x,b.y+ge/2-3),c(b)&&(cursor(HAND),graphic.noFill(),graphic.stroke("red"),graphic.strokeWeight(2),graphic.rect(b.x-b.width/2,b.y-b.height/2,b.width,b.height,s),mouseIsPressed&&(t.screen="game")),graphic.noStroke(),graphic.fill(i),graphic.rect(x.x-x.width/2,x.y-x.height/2,x.width,x.height,s),graphic.noStroke(),graphic.fill("black"),graphic.textSize(ge),graphic.textAlign(CENTER),graphic.text("Tutorial",x.x,x.y+ge/2-3),c(x)&&(cursor(HAND),graphic.noFill(),graphic.stroke("red"),graphic.strokeWeight(2),graphic.rect(x.x-x.width/2,x.y-x.height/2,x.width,x.height,s),mouseIsPressed&&(t.screen="tutorial")),graphic.pop()}var fe=0,O={width:50,height:50,get x(){return width/2-45},get y(){return height/2+40}},_={width:50,height:50,get x(){return width/2+45},get y(){return height/2+40}};function ze(t){fe++,graphic.push(),graphic.rectMode(CORNER),graphic.fill(0,0,0,255*((fe>20?20:fe)/20)*.5),graphic.rect(0,0,graphic.width,graphic.height),graphic.fill(255),graphic.textSize(40),graphic.textAlign(CENTER,CENTER),graphic.text("Paused",width/2,height/2-50),graphic.rectMode(CENTER),graphic.fill("yellow"),graphic.rect(O.x,O.y,O.width,O.height),graphic.image(t.assets.images.pause_image,O.x,O.y,O.width*.65,O.height*.65),graphic.fill("red"),graphic.rect(_.x,_.y,_.width,_.height),graphic.image(t.assets.images.exit_image,_.x,_.y,_.width*.65,_.height*.65),graphic.pop(),c(O)&&(mouseIsPressed&&Ue(t),cursor(HAND)),c(_)&&(mouseIsPressed&&t.exit(),cursor(HAND))}function Ue(t){fe=0,t.screen="game"}var Ne=!1;var He=19,Se={page:0,pages:[["Welcome to the tutorial!","This is a tutorial for the game, it will explain the basics of the game.","Click the next button to continue."],["The goal of the game is to survive for as long as possible.","You will be attacked in waves by enemies constantly.","Each time you kill an enemy, they might drop emeralds or currency.","Collecting the emeralds give you progress towards upgrading your game level.","Reaching Round 50 will win you the game."],["You can select one upgrade every time you fill your upgrade bar and level up.","There are many unique upgrades to pick from, and each has its own benefits and downsides.","As you level up more, it takes longer to get upgrades."],["You can move your character by using the WASD keys.","You can move your weapon by rotating the mouse around the player.","Your weapon cooldown is located under the player, and player health is above that bar."]],next(){this.page++,this.page>=this.pages.length&&(this.page=0)},prev(){this.page--,this.page<0&&(this.page=this.pages.length-1)},render(){graphic.push(),graphic.fill(game.menuColor),graphic.textSize(He),graphic.textAlign(CENTER),graphic.textFont(game.assets.fonts.roboto);var t=this.pages[this.page].join(`
`);graphic.text(t,width/2,200,width-50),graphic.pop()},renderButton(){graphic.push(),graphic.fill(game.menuColor),graphic.textSize(He),graphic.textAlign(CENTER),graphic.textFont(game.assets.fonts.roboto),graphic.text("Close",width/2,30),mouseX>width/2-50&&mouseX<width/2+50&&mouseY>15&&mouseY<45&&(graphic.fill(0,0,0,100),graphic.rect(width/2,30,100,30)),graphic.pop()},update(){this.render(),this.renderButton()},mousePressed(t){this.next(),mouseX>width/2-50&&mouseX<width/2+50&&mouseY>15&&mouseY<45&&(t.screen="menu")},mouseWheel(t){t.delta>0?this.next():this.prev()}},De;function Ae(t){De=t,Ne||(t.on("mousePressed",()=>Se.mousePressed(De)),t.on("mouseWheel",e=>Se.mouseWheel(e)),Ne=!0),Se.update()}var Ee=0,qe=18,v={width:200,height:50,get x(){return width/2},get y(){return height/2}};function We(t){Ee++,graphic.push(),graphic.textFont(t.assets.fonts.roboto),graphic.rectMode(CORNER),graphic.fill(0,0,0,255*((Ee>30?30:Ee)/30)*.5),graphic.rect(0,0,width,height),graphic.fill(255),graphic.textSize(50),graphic.textAlign(CENTER,CENTER),graphic.text("Game Over",width/2,200);let e="#fff",i=10;graphic.noStroke(),graphic.fill(e),graphic.rect(v.x-v.width/2,v.y-v.height/2,v.width,v.height,i),graphic.noStroke(),graphic.fill("black"),graphic.textSize(qe),graphic.textAlign(CENTER),graphic.text("Main Menu",v.x,v.y-3),c(v)&&(cursor(HAND),graphic.noFill(),graphic.stroke("red"),graphic.strokeWeight(2),graphic.rect(v.x-v.width/2,v.y-v.height/2,v.width,v.height,i),mouseIsPressed&&(t.restart(),t.screen="menu")),graphic.stroke(0),graphic.fill(t.menuColor),graphic.rect(0,height-175,width,175),graphic.pop()}var je=0,$e=18,S={width:200,height:50,get x(){return width/2},get y(){return height/2}};function Le(t){je++,graphic.push(),graphic.textFont(t.assets.fonts.roboto),graphic.rectMode(CORNER),graphic.fill(0,0,0,255*((je>30?30:je)/30)*.5),graphic.rect(0,0,width,height),graphic.fill("green"),graphic.textSize(50),graphic.textAlign(CENTER,CENTER),graphic.text("Victory",width/2,200);let e="#fff",i=10;graphic.noStroke(),graphic.fill(e),graphic.rect(S.x-S.width/2,S.y-S.height/2,S.width,S.height,i),graphic.noStroke(),graphic.fill("black"),graphic.textSize($e),graphic.textAlign(CENTER),graphic.text("Main Menu",S.x,S.y-3),c(S)&&(cursor(HAND),graphic.noFill(),graphic.stroke("red"),graphic.strokeWeight(2),graphic.rect(S.x-S.width/2,S.y-S.height/2,S.width,S.height,i),mouseIsPressed&&(t.restart(),t.screen="menu")),graphic.stroke(0),graphic.fill(t.menuColor),graphic.rect(0,height-175,width,175),graphic.pop()}window.setup=_e;window.draw=Oe;var oe=class{assets={images:{},sounds:{},fonts:{}};dimensions={width:3e3,height:3e3,position:{x:1225,y:1150},center:{x:1225,y:1150}};time={min:0,secs:0};player=null;background=null;enemies=null;upgradeScreen=null;upgrades=null;timer=0;kills=0;score=0;bullets=[];enemies_arr=[];boss_bullets=[];paused=!1;upgrading=!1;menuColor="#8793a4";_screen="load";_level=1;constructor(){window.mousePressed=(...e)=>{this.fire("mousePressed",...e)},window.mouseReleased=(...e)=>{this.fire("mouseReleased",...e)},window.mouseClicked=(...e)=>{this.fire("mouseClicked",...e)},window.mouseMoved=(...e)=>{this.fire("mouseMoved",...e)},window.mouseWheel=(...e)=>{this.fire("mouseWheel",...e)}}loadImage(e){var i=new Image;return i.src=e,i.onload=()=>(i.loaded=!0,i),i}render(){cursor(ARROW),this.draw()}get screen(){return this._screen}set screen(e="menu"){switch(e){case"tutorial":case"menu":{this.assets.sounds.game_main.stop(),this.assets.sounds.game_menu.isPlaying()||this.assets.sounds.game_menu.play();break}case"game":this.assets.sounds.game_menu.stop(),this.assets.sounds.game_main.isPlaying()||this.assets.sounds.game_main.play()}this._screen=e}get level(){return this._level}set level(e){e>50&&(e=50),this._level=e,this.score+=10}draw(){try{switch(window.graphic=createGraphics(width,height),graphic.imageMode(CENTER),graphic.rectMode(CENTER),graphic.angleMode(DEGREES),this.screen){case"menu":{Me(this);break}case"win":case"pause":case"over":case"game":{graphic.push(),this.background.draw(this),this.upgradeScreen?(this.player.weapon.drawBullets(this.bullets),this.objects.render(this.objects.objects),this.player.draw(),this.player.weapon.draw(),this.enemies.draw(this.enemies_arr),this.upgrades.renderUpgrades(this.upgrades.currentUpgrades),this.damage.render(this.damage.damages),this.background.drawPost(this),this.alerts.render(this.alerts.alerts),he(this,!1),this.upgradeScreen.render(),he(this,!0)):(this.player.weapon.drawBullets(this.bullets),this.player.weapon.updateBullets(this.bullets),this.player.weapon.checkBullets(this.bullets,this.getTargets()),this.player.checkCollisions(this.enemies_arr),this.upgrades.renderUpgrades(this.upgrades.currentUpgrades),this.damage.render(this.damage.damages),ve(this)?(this.upgrades.update(this.upgrades.currentUpgrades),this.objects.render(this.objects.objects),this.player.draw(),this.player.update(),this.player.weapon.draw(),this.enemies.draw(this.enemies_arr),this.enemies.update(this.enemies_arr),this.background.drawPost(this),this.alerts.render(this.alerts.alerts),this.currency.checkUpgrades(),he(this),this.updateStats()):(this.objects.render(this.objects.objects),this.player.draw(),this.enemies.draw(this.enemies_arr),this.background.drawPost(this),he(this),this.screen==="over"&&We(this),this.screen==="win"&&Le(this))),this.screen==="pause"&&ze(this),graphic.pop();break}case"tutorial":{Ae(this);break}case"load":{this.screen="menu";break}default:{graphic.text("Error: Invalid screen",width/2,height/2);break}}background(0),image(window.graphic,width/2,height/2,width,height),graphic.remove()}catch(e){console.error(e)}}updateStats(){this.timer+=1/60;var e=Math.floor(this.timer/60),i=Math.floor(this.timer-e*60);this.time={min:e,secs:i}}pause(){return this.screen="pause",!0}exit(){return this.screen="menu",!0}getTargets(){return[...this.enemies.enemies,...this.objects.objects.filter(e=>!!e).filter(e=>e.hasOwnProperty("health")&&e.health>0).map(e=>{var i=e.getCoords();return new Proxy(e,{get(s,r){return r==="x"?i.x:r==="y"?i.y:r==="_x"?e.x:r==="_y"?e.y:s[r]}})})]}restart(){this.timer=0,this.kills=0,this.score=0,this.time={min:0,secs:0},this.dimensions={width:3e3,height:3e3,position:{x:1225,y:1150},center:{x:1225,y:1150}},this.bullets=[],this.enemies_arr=[],this.paused=!1,this.upgrading=!1,this._level=1,this.player=new le(width/2,height/2),this.background=new B,this.enemies=new M(this),this.objects=new N(this),this.currency=new H(this),this.upgrades=new D(this),this.damage=new A(this),this.alerts=new W(this)}debugStats(){var e=Math.floor(this.timer/60),i=Math.floor(this.timer-e*60);graphic.fill("black"),graphic.textSize(25),graphic.textAlign(CENTER),graphic.text(`${e<10?"0"+e:e}:${i<10?"0"+i:i}`,width/2,30),this.timer+=1/60,text(`Location: (${game.player.coords.x.toFixed(1)}, ${game.player.coords.y.toFixed(1)})`,width/2,60)}getLocation(e,i){return{x:e-this.dimensions.position.x,y:i-this.dimensions.position.y}}moveEntities(e,i){for(var s=0;s<this.enemies_arr.length;s++){var r=this.enemies_arr[s];r.x-=e,r.y+=i}for(var s=0;s<this.bullets.length;s++){var a=this.bullets[s];a.x-=e,a.y+=i}for(var s=0;s<this.boss_bullets.length;s++){var a=this.boss_bullets[s];a.x-=e,a.y+=i}if(this.upgrades.upgrades.find(d=>d.name==="Lightning"))for(var h=this.upgrades.upgrades.find(d=>d.name==="Lightning"),s=0;s<h.bolts.length;s++){var o=h.bolts[s];o.x-=e,o.y+=i}if(this.upgrades.upgrades.find(d=>d.name==="Ball"))for(var n=this.upgrades.upgrades.find(d=>d.name==="Ball"),s=0;s<n.balls.length;s++){var o=n.balls[s];o.x-=e,o.y+=i}}requestUpgrade(e){return new Promise((i,s)=>{this.upgrading=!0;var r=this.upgrades.select(3);this.upgradeScreen=new de(this,r,e),this.upgradeScreen.on("close",()=>{this.upgrading=!1,i()}),this.upgradeScreen.on("upgrade",()=>{this.upgrading=!1,i()})}).then(()=>this.upgradeScreen.fadeOut()).catch(i=>{console.error(i)}).finally(()=>{this.upgradeScreen=null})}get frames(){return window.frameCount}get frame(){return window.frameCount}listeners=[];on(e,i){this.listeners.push([e,i])}fire(e,...i){for(let s=0;s<this.listeners.length;s++)this.listeners[s][0]===e&&this.listeners[s][1](...i)}};ke.then(()=>{window.game=new oe}).catch(t=>{document.write("ERROR: "+t)});window.addEventListener("blur",()=>{noLoop()});window.addEventListener("focus",()=>{loop()});})();
//# sourceMappingURL=data:application/json;base64,
